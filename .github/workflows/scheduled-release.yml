name: Scheduled Release with PR

on:
  workflow_dispatch

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Fetch all tags from remote
      run: |
        git fetch --tags

    - name: Check if v1.0 exists, if not create it
      id: check_v1_tag
      run: |
        # Comprobar si el tag v1.0 existe
        if git rev-parse "v1.0" >/dev/null 2>&1; then
          echo "Tag v1.0 already exists."
        else
          echo "Tag v1.0 does not exist, creating it now."
          git tag v1.0
          git push origin v1.0
        fi

    - name: Get the latest tag (or create v1.0 if no tags exist)
      id: get_latest_tag
      run: |
        # Obtener el último tag, si no existe, usar v1.0
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0")
        echo "latest_tag=${latest_tag}" >> $GITHUB_ENV
        echo "Latest tag is: $latest_tag"

    - name: Increment the version (e.g., v1.0 -> v2.0, v2.0 -> v3.0)
      id: increment_version
      run: |
        latest_version="${{ env.latest_tag }}"
        
        # Si el último tag es v1.0, se crea v2.0, etc.
        if [[ "$latest_version" == "v1.0" ]]; then
          new_version="v2.0"
        else
          # Extraemos el número antes del punto en el tag (ej. v3.0 -> 3)
          version_number="${latest_version#v}"
          major_version=$(echo $version_number | cut -d'.' -f1)
          
          # Aumentamos el número de la versión mayor (major)
          new_major=$((major_version + 1))
          new_version="v${new_major}.0"
        fi
        
        # Guardamos la nueva versión
        echo "new_version=${new_version}" >> $GITHUB_ENV
        echo "New version calculated: $new_version"

    - name: Check if the new tag already exists
      id: check_new_tag
      run: |
        # Verificar si el nuevo tag ya existe
        if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
          echo "Tag ${{ env.new_version }} already exists."
        else
          echo "Tag ${{ env.new_version }} does not exist. Creating it now."
          git tag ${{ env.new_version }}
          git push origin ${{ env.new_version }}
        fi

  create-pull-request:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install GitHub CLI
      run: |
        sudo apt-get install gh

    - name: Authenticate GitHub CLI
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Create Pull Request from develop to main
      run: |
        gh pr create \
          --title "Release ${{ env.new_version }}" \
          --body "This pull request prepares the release of a new version." \
          --base main \
          --head develop 