name: Scheduled Release with PR

on:
  workflow_dispatch

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get the latest tag
      id: get_latest_tag
      run: |
        # Obtener el último tag, si no existe, usa v1.0
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0")
        echo "latest_tag=${latest_tag}" >> $GITHUB_ENV

    - name: Increment the version (e.g., v1.0 -> v2.0)
      id: increment_version
      run: |
        # Extraemos la versión actual (por ejemplo v1.0)
        IFS='.' read -r major minor <<< "${latest_tag#v}"
        
        # Aumentamos la versión mayor (major)
        new_version="v$((major + 1)).0"
        
        # Guardamos la nueva versión en el entorno
        echo "new_version=${new_version}" >> $GITHUB_ENV
        echo "New version calculated: $new_version"

    - name: Delete the existing tag if it exists
      run: |
        # Eliminar el tag remoto si ya existe
        git fetch --tags
        if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
          git tag -d ${{ env.new_version }}
          git push origin :refs/tags/${{ env.new_version }}
        fi

    - name: Create a new tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        # Crear el nuevo tag con la versión incrementada
        git tag ${{ env.new_version }}
        git push origin ${{ env.new_version }}

  create-pull-request:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install GitHub CLI
      run: |
        sudo apt-get install gh

    - name: Authenticate GitHub CLI
      run: gh auth login --with-token < ${{ secrets.GITHUB_TOKEN }}

    - name: Create Pull Request from develop to main
      run: |
        gh pr create \
          --title "Release ${{ env.new_version }}" \
          --body "This pull request prepares the release of version ${{ env.new_version }}." \
          --base main \
          --head develop \
          --draft false
