name: Scheduled Release with PR

on:
  workflow_dispatch

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get the latest tag
      id: get_latest_tag
      run: |
        # Obtén el último tag, si no existe, usa v1.0
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0")
        echo "latest_tag=${latest_tag}" >> $GITHUB_ENV

    - name: Calculate the next version
      id: calculate_version
      run: |
        # Incrementa la versión menor (minor)
        IFS='.' read -r major minor patch <<< "${latest_tag#v}"
        new_version="v$major.$((minor + 1)).0"
        echo "new_version=${new_version}" >> $GITHUB_ENV
        echo "New version calculated: $new_version"

    - name: Create a new tag and push it
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        # Crear un nuevo tag y enviarlo
        git tag ${{ env.new_version }}
        git push origin ${{ env.new_version }}

  create-pull-request:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Create Pull Request from develop to main
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        source-branch: develop
        target-branch: main
        title: "Release ${{ env.new_version }}"
        body: |
          This pull request prepares the release of version ${{ env.new_version }}.
          It includes:
          - Changes merged into develop
          - The new tag: ${{ env.new_version }}
        draft: false
