name: Scheduled Release with PR

on:
  workflow_dispatch

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get the latest tag
      id: get_latest_tag
      run: |
        # Obtener el último tag basado en el patrón vX.X
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0")
        echo "latest_tag=${latest_tag}" >> $GITHUB_ENV
        echo "Latest tag is: $latest_tag"

    - name: Increment the version (e.g., v3.0 -> v4.0)
      id: increment_version
      run: |
        # Extraemos la versión actual (por ejemplo v3.0)
        latest_version="${{ env.latest_tag }}"
        
        # Verificamos que el tag siga el formato vX.Y (ejemplo: v3.0)
        if [[ "$latest_version" =~ ^v([0-9]+)\.([0-9]+)$ ]]; then
          major=${BASH_REMATCH[1]}
          minor=${BASH_REMATCH[2]}
          
          # Aumentamos la versión mayor
          new_major=$((major + 1))
          new_version="v${new_major}.0"
          
          # Guardamos la nueva versión
          echo "new_version=${new_version}" >> $GITHUB_ENV
          echo "New version calculated: $new_version"
        else
          echo "Error: Tag format is not vX.Y"
          exit 1
          
    - name: Create a new tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        # Crear el nuevo tag con la versión incrementada
        git tag ${{ env.new_version }}
        git push origin ${{ env.new_version }}

  create-pull-request:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install GitHub CLI
      run: |
        sudo apt-get install gh

    - name: Authenticate GitHub CLI
      run: gh auth login --with-token < ${{ secrets.GITHUB_TOKEN }}

    - name: Create Pull Request from develop to main
      run: |
        gh pr create \
          --title "Release ${{ env.new_version }}" \
          --body "This pull request prepares the release of version ${{ env.new_version }}." \
          --base main \
          --head develop \
          --draft false
