name: Scheduled Release with PR

on:
    workflow_dispatch

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get the latest tag
      id: get_latest_tag
      run: |
        # Obtener el último tag, si no existe, usa v0.0.0
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "latest_tag=${latest_tag}" >> $GITHUB_ENV

    - name: Increment the version (e.g., v1.0 -> v1.1)
      id: increment_version
      run: |
        # Extraemos la versión actual (por ejemplo v1.0.0)
        IFS='.' read -r major minor patch <<< "${latest_tag#v}"
        
        # Aumentamos la versión menor (minor)
        new_version="v$major.$((minor + 1)).0"
        
        # Comprobar si el nuevo tag ya existe y si es así, incrementa el número de patch
        while git rev-parse "$new_version" >/dev/null 2>&1; do
          patch=$((patch + 1))
          new_version="v$major.$minor.$patch"
        done
        
        # Guardamos la nueva versión en el entorno
        echo "new_version=${new_version}" >> $GITHUB_ENV
        echo "New version calculated: $new_version"

    - name: Create a new tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        # Crear el nuevo tag con la versión incrementada
        git tag ${{ env.new_version }}
        git push origin ${{ env.new_version }}

  create-pull-request:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Create Pull Request from develop to main
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        base: main             # Rama de destino
        branch: develop        # Rama fuente
        title: "Release ${{ env.new_version }}"
        body: |
          This pull request prepares the release of version ${{ env.new_version }}.
        draft: false            # No crear la PR como borrador
